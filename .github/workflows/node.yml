name: EOS EVM Node CI

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
  workflow_dispatch:
    inputs:
      upload-artifacts:
        description: 'Upload artifacts, including the build.tar.gz, for debugging.'
        type: boolean
        default: false

defaults:
  run:
    shell: bash

jobs:
  documentation:
    name: Attach Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: 'false'

      - name: Attach Documentation
        run: cat .github/workflows/node.md >> $GITHUB_STEP_SUMMARY

  d:
    name: Discover Platforms
    runs-on: ubuntu-latest
    outputs:
      missing-platforms: ${{steps.discover.outputs.missing-platforms}}
      p: ${{steps.discover.outputs.platforms}}
    steps:
      - name: Discover Platforms
        id: discover
        uses: AntelopeIO/discover-platforms-action@v1
        with:
          platform-file: .cicd/platforms.json
          password: ${{secrets.GITHUB_TOKEN}}
          package-name: builders

  build-platforms:
    name: Build Platforms
    needs: d
    if: needs.d.outputs.missing-platforms != '[]'
    strategy:
      fail-fast: false
      matrix:
        platform: ${{fromJSON(needs.d.outputs.missing-platforms)}}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{fromJSON(needs.d.outputs.p)[matrix.platform].image}}
          file: ${{fromJSON(needs.d.outputs.p)[matrix.platform].dockerfile}}

  build:
    name: EOS EVM Node Build
    needs: [d, build-platforms]
    if: always() && needs.d.result == 'success' && (needs.build-platforms.result == 'success' ||  needs.build-platforms.result == 'skipped')
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu22 ]
    runs-on: ubuntu-latest
    container: ${{fromJSON(needs.d.outputs.p)[matrix.platform].image}}

    steps:
      - name: Authenticate
        id: auth
        uses: AntelopeIO/github-app-token-action@v1
        with:
          app_id: ${{ secrets.TRUSTEVM_CI_APP_ID }}
          private_key: ${{ secrets.TRUSTEVM_CI_APP_KEY }}

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: 'recursive'
          token: ${{ steps.auth.outputs.token }}

      - name: Build EOS EVM Node
        run: .github/workflows/build-node.sh
        env:
          CC: gcc-10
          CXX: g++-10

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: inputs.upload-artifacts || false
        with:
          name: build.tar.gz
          path: build.tar.gz
